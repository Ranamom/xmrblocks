name: DockerHub Publish

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # manual trigger (through website or api)

env:
  IMAGE_NAME: rinocommunity/monero-explorer


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest Monero master commit hash
        id: get_latest_monero_master_commit_hash
        run: echo "::set-output name=latest_commit_hash::$(curl -s https://api.github.com/repos/monero-project/monero/branches/master | grep -i sha | awk 'NR==1{print $2}' | tr -d "\",")"

      - name: Log into Dockerhub
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull "dependencies1" if it exists
        run: docker pull $IMAGE_NAME:dependencies1 || true

      - name: Build updated "dependencies1" if necessary
        run: docker build --pull
          --target dependencies1
          --cache-from $IMAGE_NAME:dependencies1
          -f ./Dockerfile
          -t $IMAGE_NAME:dependencies1 .

      - name: Push "dependencies1"
        run: docker push $IMAGE_NAME:dependencies1

      - name: Pull "builder_monero_master" if it exists
        run: docker pull $IMAGE_NAME:builder_monero_master || true

      - name: Build updated "builder_monero_master" if necessary
        run: docker build --pull
          --target builder_monero
          --cache-from $IMAGE_NAME:dependencies1
          --cache-from $IMAGE_NAME:builder_monero_master
          --build-arg BRANCH=master
          --build-arg BUILD_BRANCH=${{ steps.get_latest_monero_master_commit_hash.outputs.latest_commit_hash }}
          -f ./Dockerfile
          -t $IMAGE_NAME:builder_monero_master .

      - name: Push "builder_monero_master"
        run: docker push $IMAGE_NAME:builder_monero_master

      - name: Pull "builder_devel" if it exists
        run: docker pull $IMAGE_NAME:builder_devel || true

      - name: Build updated "builder_devel" if necessary
        run: docker build --pull
          --target builder
          --cache-from $IMAGE_NAME:dependencies1
          --cache-from $IMAGE_NAME:builder_monero_master
          --cache-from $IMAGE_NAME:builder_devel
          -f ./Dockerfile
          -t $IMAGE_NAME:builder_devel .

      - name: Push "builder_devel"
        run: docker push $IMAGE_NAME:builder_devel

      - name: Pull final image if it exists
        run: docker pull $IMAGE_NAME || true

      - name: Build updated final image if necessary
        run: docker build --pull
          --cache-from $IMAGE_NAME:dependencies1
          --cache-from $IMAGE_NAME:builder_monero_master
          --cache-from $IMAGE_NAME:builder_devel
          --cache-from $IMAGE_NAME
          -f ./Dockerfile
          -t $IMAGE_NAME:most_recent_hash .

      - name: Tag the image with its Monero tag as well
        run: docker tag $IMAGE_NAME:most_recent_hash $IMAGE_NAME:${{ steps.get_latest_monero_master_commit_hash.outputs.latest_commit_hash }}

      - name: Push the image tagged with its Monero tag as well
        run: docker push $IMAGE_NAME:${{ steps.get_latest_monero_master_commit_hash.outputs.latest_commit_hash }}

      - name: Tag the image as latest as well
        run: docker tag $IMAGE_NAME:most_recent_hash $IMAGE_NAME:latest

      - name: Push the image tagged as latest as well
        run: docker push $IMAGE_NAME:latest
